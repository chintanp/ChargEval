version: '3'
services:
  nginx:
    logging:
      driver: awslogs
      options:
        awslogs-group: "cp84-evi-dss-mainEC2"
        awslogs-stream: "nginx"
    image: nginx:1.19.2
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./templates:/etc/nginx/templates/
      - './ssl:/ssl/'
    depends_on:
      - evides
      - resview
    networks:
      - evidssnet 
    environment:
      - EVIDSSDOCS_IP=$EVIDSSDOCS_IP
      - EVIDES_IP=$EVIDES_IP
      - RESVIEW_IP=$RESVIEW_IP
      - REDASH_IP=$REDASH_IP
      - EVIDSS_DOMAINNAME=$EVIDSS_DOMAINNAME
      - EVIDES_PORT=$EVIDES_PORT
      - RESVIEW_PORT=$RESVIEW_PORT
      - GRAFANA_PORT=$GRAFANA_PORT
      - GRAFANA_HOST=$GRAFANA_HOST
  flyway:
    logging:
      driver: awslogs
      options:
        awslogs-group: "cp84-evi-dss-mainEC2"
        awslogs-stream: "flyway"
    image: flyway/flyway
    command: -url=jdbc:postgresql://${MAIN_HOST}:${MAIN_PORT}/${MAIN_DB} -schemas=public -user=${DBWRITE_USER} -password=${DBWRITE_PWD} migrate
    volumes:
      - ./database/migrations:/flyway/sql
    networks:
      - evidssnet    
  evides:
    logging:
      driver: awslogs
      options:
        awslogs-group: "cp84-evi-dss-mainEC2" 
        awslogs-stream: "evides"
    build: './evides'
    ports:
      - '${EVIDES_PORT}:${EVIDES_PORT}'
    networks:
      - evidssnet
    environment:
      - GITHUB_PAT=$GITHUB_PAT
      - EVIDES_PORT=$EVIDES_PORT
      - AUTH0_USER=$AUTH0_USER
      - AUTH0_KEY=$AUTH0_KEY
      - AUTH0_SECRET=$AUTH0_SECRET
      - AFDC_API_KEY=$AFDC_API_KEY
      - MAPBOX_ACCESS_TOKEN=$MAPBOX_ACCESS_TOKEN
      - MAIN_USER=$DBWRITE_USER
      - MAIN_PWD=$DBWRITE_PWD
      - MAIN_HOST=$MAIN_HOST
      - MAIN_PORT=$MAIN_PORT
      - MAIN_DB=$MAIN_DB
    restart: always
  resview:
    logging:
      driver: awslogs
      options:
        awslogs-group: "cp84-evi-dss-mainEC2" 
        awslogs-stream: "resview"
        awslogs-region: us-west-2
    build: './resview'
    ports:
      - '${RESVIEW_PORT}:${RESVIEW_PORT}'
    networks:
      - evidssnet
    environment:
      - GITHUB_PAT=$GITHUB_PAT
      - RESVIEW_PORT=$RESVIEW_PORT
      - AFDC_API_KEY=$AFDC_API_KEY
      - MAPBOX_ACCESS_TOKEN=$MAPBOX_ACCESS_TOKEN
      - MAIN_USER=$DBREAD_USER
      - MAIN_PWD=$DBREAD_PWD
      - MAIN_HOST=$MAIN_HOST
      - MAIN_PORT=$MAIN_PORT
      - MAIN_DB=$MAIN_DB
    restart: always
  tripgen:
    logging:
      driver: awslogs
      options:
        awslogs-group: "cp84-evi-dss-mainEC2" 
        awslogs-stream: "tripgen"
    build: './tripgen'
    networks:
      - evidssnet
    environment:
      - GITHUB_PAT=$GITHUB_PAT
      - AFDC_API_KEY=$AFDC_API_KEY
      - MAPBOX_ACCESS_TOKEN=$MAPBOX_ACCESS_TOKEN
      - MAIN_USER=$DBREAD_USER
      - MAIN_PWD=$DBREAD_PWD
      - MAIN_HOST=$MAIN_HOST
      - MAIN_PORT=$MAIN_PORT
      - MAIN_DB=$MAIN_DB
      - SOCRATA_APP_TOKEN=$SOCRATA_APP_TOKEN
      - MAILGUN_API_KEY=$MAILGUN_API_KEY
  redis:
    logging:
      driver: awslogs
      options:
        awslogs-group: "cp84-evi-dss-mainEC2" 
        awslogs-stream: "redis"
    image: 'redis:6.0.6'
    volumes:
      - $PWD/redis-data:/var/lib/redis
    ports:
      - '6379:6379'
    networks:
      - evidssnet
    restart: always
  simman:
    logging:
      driver: awslogs
      options:
        awslogs-group: "cp84-evi-dss-mainEC2" 
        awslogs-stream: "simman"
    build: './simman'
    depends_on:
      - redis
    ports:
      - '${SIMMAN_PORT}:${SIMMAN_PORT}'
    networks:
      - evidssnet
    volumes:
      - $HOME/.aws/credentials:/home/app/.aws/credentials:ro
    environment:
      - SIMMAN_PORT=$SIMMAN_PORT
      - REDIS_HOST=$REDIS_HOST
      - MAIN_USER=$DBWRITE_USER
      - MAIN_PWD=$DBWRITE_PWD
      - MAIN_HOST=$MAIN_HOST
      - MAIN_PORT=$MAIN_PORT
      - MAIN_DB=$MAIN_DB
      - EC2_SECURITY_GROUPNAME=$EC2_SECURITY_GROUPNAME
      - EC2_KEYPAIR_NAME=$EC2_KEYPAIR_NAME
      - EC_R_AMI_ID=$EC_R_AMI_ID
      - IAM_INSTANCE_PROFILE_ARN=$IAM_INSTANCE_PROFILE_ARN
      - EC_GAMA_AMI_ID=$EC_GAMA_AMI_ID
      - RESVIEW_HOST=$RESVIEW_HOST
    command:
      - nodemon
      - index.js
    restart: always

  connect:
    build:
      context: ./connect
    hostname: connect
    container_name: connect
    networks:
      - evidssnet
    ports:
      - "8083:8083"
    environment:
      - CONNECT_BOOTSTRAP_SERVERS=$KAFKA_BOOTSTRAP_SERVER
      - CONNECT_CONFLUENT_TOPIC_BOOTSTRAP_SERVERS=$KAFKA_BOOTSTRAP_SERVER
      - CONNECT_USERNAME=$CONFLUENT_API_KEY
      - CONNECT_PASSWORD=$CONFLUENT_API_SECRET
      - CONNECT_REST_ADVERTISED_HOST_NAME=connect
      - CONNECT_REST_PORT=8083
      - CONNECT_REPLICATION_FACTOR=3
      - CONNECT_GROUP_ID=compose-connect-group
      - CONNECT_CONFIG_STORAGE_TOPIC=docker-connect-configs
      - CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR=3
      - CONNECT_OFFSET_FLUSH_INTERVAL_MS=10000
      - CONNECT_OFFSET_STORAGE_TOPIC=docker-connect-offsets
      - CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR=3
      - CONNECT_STATUS_STORAGE_TOPIC=docker-connect-status
      - CONNECT_STATUS_STORAGE_REPLICATION_FACTOR=3
      - CONNECT_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE=false
      - CONNECT_INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      # CLASSPATH required due to CC-2422
      - CLASSPATH=/usr/share/java/monitoring-interceptors/monitoring-interceptors-6.0.0.jar
      - CONNECT_PRODUCER_INTERCEPTOR_CLASSES="io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      - CONNECT_CONSUMER_INTERCEPTOR_CLASSES= "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      - CONNECT_PLUGIN_PATH="/usr/share/java,/usr/share/confluent-hub-components"
      - CONNECT_LOG4J_ROOT_LOGLEVEL=INFO
      - CONNECT_LOG4J_LOGGERS=org.reflections=ERROR
      - CONNECT_SECURITY_PROTOCOL=SASL_SSL
      - CONNECT_SASL_MECHANISM=PLAIN
      - CONNECT_CONFLUENT_TOPIC_SECURITY_PROTOCOL=SASL_SSL
      - CONNECT_CONFLUENT_TOPIC_SASL_MECHANISM=PLAIN
      - CONNECT_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="${CONFLUENT_API_KEY}" password="${CONFLUENT_API_SECRET}";
      - CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL=SASL_SSL
      - CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="${CONFLUENT_API_KEY}" password="${CONFLUENT_API_SECRET}";
      - CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM=PLAIN
      - CONNECT_REQUEST_TIMEOUT_MS=20000
      - CONNECT_RETRY_BACKOFF_MS=500
      - CONNECT_CONSUMER_SASL_MECHANISM=PLAIN
      - CONNECT_CONSUMER_REQUEST_TIMEOUT_MS=20000
      - CONNECT_CONSUMER_RETRY_BACKOFF_MS=500
      - CONNECT_CONSUMER_SECURITY_PROTOCOL=SASL_SSL
      - CONNECT_PRODUCER_SASL_MECHANISM=PLAIN
      - CONNECT_PRODUCER_REQUEST_TIMEOUT_MS=20000
      - CONNECT_PRODUCER_RETRY_BACKOFF_MS=500
      - CONNECT_PRODUCER_SECURITY_PROTOCOL=SASL_SSL
      - CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL=SASL_SSL
      - CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="${CONFLUENT_API_KEY}" password="${CONFLUENT_API_SECRET}";
      - CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM=PLAIN   
networks:
  evidssnet: null
